version: 2.1
orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2
  browser-tools: circleci/browser-tools@1.1

executors:
  working_directory: ~/rememberyou
  ruby_and_postgres:
    docker:
      - image: cimg/ruby:3.0-browsers
          environment:
            BUNDLE_JOBS: "3"
            BUNDLE_RETRY: "3"
            PGHOST: 127.0.0.1
            PGUSER: user_name
            PGPASSWORD: ""
            RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
          environment:
            POSTGRES_USER: user_name
            POSTGRES_DB: db_name
            POSTGRES_PASSWORD: ""

jobs:
  rubocop:
    executor: ruby_and_postgres
    steps:
      - checkout
      # バンドル キャッシュを復元
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: バンドル インストール
          command: |
            gem install bundler -v 2.4.6
            bundle install
      # バンドル キャッシュを保存
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # Yarn の設定
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Yarn のインストール
          command: yarn install --cache-folder ~/.cache/yarn
      # Yarn のキャッシュを保存
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: run rubocop
          command: bundle exec rubocop
      # DB関連の設定
      - run:
          name: rails db:migrate
          command: bundle exec rails db:migrate
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Rspec
          command: bundle exec rspec
      - run:
          name: 'Install Heroku CLI, if necessary'
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: Deploy to Heroku_Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PRD.git HEAD:main
      - run:
          name: db migration
          command: |
            heroku run rails db:migrate --app ${HEROKU_APP_NAME_PRD}
workflows:
  version: 2
  build:
    jobs:
      - rubocop
      - test
      - deploy:
          requires:
            - rubocop
            - test
